# check partial string comparison

#functions
# TODO: implement function support in WHERE
string_tests_select.txt, "SUBSTR(o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value,1,3)='the'","the quick brown fox jumps over the lazy dog",$FAIL$
,"select SUBSTR(o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value,1,3) from EHR e contains COMPOSITION c contains OBSERVATION o[openEHR-EHR-OBSERVATION.test_all_types.v1] ",the
,"select (o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value,1,3) from EHR e contains COMPOSITION c contains OBSERVATION o[openEHR-EHR-OBSERVATION.test_all_types.v1] ",the


# SIMILAR uses a regexp (see https://www.postgresql.org/docs/13/functions-matching.html#FUNCTIONS-SIMILARTO-REGEXP)
string_tests_select.txt, "o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value SIMILAR TO '([a-z]| )*'","the quick brown fox jumps over the lazy dog"

# standard like/ilike matching
string_tests_select.txt, "o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value LIKE 'the%'","the quick brown fox jumps over the lazy dog"
string_tests_select.txt, "o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value LIKE '__________brown____________________________'","the quick brown fox jumps over the lazy dog"
string_tests_select.txt, "o/data[at0001]/events[at0002]/data[at0003]/items[at0004]/value/value ILIKE '%FOX%'","the quick brown fox jumps over the lazy dog"



